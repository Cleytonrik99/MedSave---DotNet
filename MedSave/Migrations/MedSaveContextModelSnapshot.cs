// <auto-generated />
using System;
using MedSave.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MedSave.Migrations
{
    [DbContext(typeof(MedSaveContext))]
    partial class MedSaveContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MedSave.Model.ActiveIngredient", b =>
                {
                    b.Property<decimal>("ActIngreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("ACT_INGRE_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("ActIngreId"));

                    b.Property<string>("ActIngredient")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("ACT_INGREDIENT");

                    b.HasKey("ActIngreId")
                        .HasName("PK_ACTIVE_INGREDIENT");

                    b.ToTable("ACTIVE_INGREDIENT", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.AddressManufacturer", b =>
                {
                    b.Property<decimal>("AddressIdManufacturer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDRESS_ID_MANUFACTURER");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("AddressIdManufacturer"));

                    b.Property<string>("AddressDescription")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ADDRESS_DESCRIPTION");

                    b.Property<int>("Cep")
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CEP");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("COMPLEMENT");

                    b.Property<decimal>("NeighId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("NEIGH_ID");

                    b.Property<int>("NumberManu")
                        .HasColumnType("NUMBER(7)")
                        .HasColumnName("NUMBER_MANU");

                    b.HasKey("AddressIdManufacturer")
                        .HasName("PK_ADDRESS_MANUFACTURER");

                    b.HasIndex("NeighId")
                        .IsUnique();

                    b.ToTable("ADDRESS_MANUFACTURER", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.AddressStock", b =>
                {
                    b.Property<decimal>("AddressIdStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDRESS_ID_STOCK");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("AddressIdStock"));

                    b.Property<string>("AddressDescription")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ADDRESS_DESCRIPTION");

                    b.Property<int>("Cep")
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CEP");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("COMPLEMENT");

                    b.Property<decimal>("NeighId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("NEIGH_ID");

                    b.Property<int>("NumberStock")
                        .HasColumnType("NUMBER(7)")
                        .HasColumnName("NUMBER_STOCK");

                    b.HasKey("AddressIdStock")
                        .HasName("PK_ADDRESS_STOCK");

                    b.HasIndex("NeighId")
                        .IsUnique();

                    b.ToTable("ADDRESS_STOCK", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.BatchMedicine", b =>
                {
                    b.Property<decimal>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("BATCH_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("BatchId"));

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("BATCH_NUMBER");

                    b.Property<int>("CurrentQuantity")
                        .HasColumnType("NUMERIC")
                        .HasColumnName("CURRENT_QUANTITY");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("EXPIRATION_DATE");

                    b.Property<decimal>("ManufacId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MANUFAC_ID");

                    b.Property<DateTime>("ManufacturingDate")
                        .HasColumnType("DATE")
                        .HasColumnName("MANUFACTURING_DATE");

                    b.HasKey("BatchId")
                        .HasName("PK_BATCH_MEDICINE");

                    b.HasIndex("ManufacId");

                    b.ToTable("BATCH_MEDICINE", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.CategoryMedicine", b =>
                {
                    b.Property<decimal>("CategoryMedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("CATEGORY_MED_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("CategoryMedId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("CATEGORY");

                    b.HasKey("CategoryMedId")
                        .HasName("PK_CATEGORY_MEDICINE");

                    b.ToTable("CATEGORY_MEDICINE", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.City", b =>
                {
                    b.Property<decimal>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("CITY_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("CityId"));

                    b.Property<string>("NameCity")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("NAME_CITY");

                    b.Property<decimal>("StateId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("STATE_ID");

                    b.HasKey("CityId")
                        .HasName("PK_CITY");

                    b.HasIndex("StateId");

                    b.ToTable("CITY", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.ContactManufacturer", b =>
                {
                    b.Property<decimal>("ContactManuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("CONTACT_MANU_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("ContactManuId"));

                    b.Property<string>("EmailManu")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("EMAIL_MANU");

                    b.Property<decimal>("PhoneNumberManu")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PHONE_NUMBER_MANU");

                    b.HasKey("ContactManuId")
                        .HasName("PK_CONTACT_MANUFACTURER");

                    b.HasIndex("EmailManu")
                        .IsUnique()
                        .HasDatabaseName("UK_CONTACT_MANU_EMAIL");

                    b.HasIndex("PhoneNumberManu")
                        .IsUnique()
                        .HasDatabaseName("UK_CONTACT_MANU_PHONE");

                    b.ToTable("CONTACT_MANUFACTURER", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.ContactUser", b =>
                {
                    b.Property<decimal>("ContactUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("CONTACT_USER_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("ContactUserId"));

                    b.Property<string>("EmailUser")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("EMAIL_USER");

                    b.Property<decimal>("PhoneNumberUser")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PHONE_NUMBER_USER");

                    b.HasKey("ContactUserId")
                        .HasName("PK_CONTACT_USER");

                    b.HasIndex("EmailUser")
                        .IsUnique()
                        .HasDatabaseName("UK_CONTACT_USER_EMAIL");

                    b.HasIndex("PhoneNumberUser")
                        .IsUnique()
                        .HasDatabaseName("UK_CONTACT_USER_PHONE");

                    b.ToTable("CONTACT_USER", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.LocationStock", b =>
                {
                    b.Property<decimal>("LocationIdStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("LOCATION_ID_STOCK");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("LocationIdStock"));

                    b.Property<decimal>("AddressIdStock")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDRESS_ID_STOCK");

                    b.Property<string>("LocationStockName")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("LOCATION_STOCK_NAME");

                    b.Property<string>("NameLocation")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("NAME_LOCATION");

                    b.HasKey("LocationIdStock")
                        .HasName("PK_LOCATION_STOCK");

                    b.HasIndex("AddressIdStock")
                        .IsUnique();

                    b.ToTable("LOCATION_STOCK", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.Manufacturer", b =>
                {
                    b.Property<decimal>("ManufacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("MANUFAC_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("ManufacId"));

                    b.Property<decimal>("AddressIdManufacturer")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDRESS_ID_MANUFACTURER");

                    b.Property<long>("Cnpj")
                        .HasColumnType("NUMBER(14)")
                        .HasColumnName("CNPJ");

                    b.Property<decimal>("ContactManuId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CONTACT_MANU_ID");

                    b.Property<string>("NameManu")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("NAME_MANU");

                    b.HasKey("ManufacId")
                        .HasName("PK_MANUFACTURER");

                    b.HasIndex("AddressIdManufacturer")
                        .IsUnique();

                    b.HasIndex("Cnpj")
                        .IsUnique()
                        .HasDatabaseName("UK_MANUFACTURER_CNPJ");

                    b.HasIndex("ContactManuId")
                        .IsUnique();

                    b.ToTable("MANUFACTURER", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.MedicineActiveIngr", b =>
                {
                    b.Property<decimal>("MedActiveIngrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("MED_ACTIVE_INGR_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("MedActiveIngrId"));

                    b.Property<decimal>("ActIngreId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ACT_INGRE_ID");

                    b.Property<decimal>("MedicineId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MEDICINE_ID");

                    b.HasKey("MedActiveIngrId")
                        .HasName("PK_MEDICINE_ACTIVE_INGR");

                    b.HasIndex("ActIngreId");

                    b.HasIndex("MedicineId");

                    b.ToTable("MEDICINE_ACTIVE_INGR", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.MedicineDispense", b =>
                {
                    b.Property<decimal>("DispensationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("DISPENSATION_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("DispensationId"));

                    b.Property<DateTime>("DateDispensation")
                        .HasColumnType("DATE")
                        .HasColumnName("DATE_DISPENSATION");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("DESTINATION");

                    b.Property<string>("Observation")
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("OBSERVATION");

                    b.Property<short>("QuantityDispensed")
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("QUANTITY_DISPENSED");

                    b.Property<decimal>("UserId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("USER_ID");

                    b.HasKey("DispensationId")
                        .HasName("PK_MEDICINE_DISPENSE");

                    b.HasIndex("UserId");

                    b.ToTable("MEDICINE_DISPENSE", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.MedicinePharmForm", b =>
                {
                    b.Property<decimal>("MedPharmFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("MED_PHARM_FORM_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("MedPharmFormId"));

                    b.Property<decimal>("MedicineId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MEDICINE_ID");

                    b.Property<decimal>("PharmFormId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PHARM_FORM_ID");

                    b.HasKey("MedPharmFormId")
                        .HasName("PK_MEDICINE_PHARM_FORM");

                    b.HasIndex("MedicineId");

                    b.HasIndex("PharmFormId");

                    b.ToTable("MEDICINE_PHARM_FORM", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.Medicines", b =>
                {
                    b.Property<decimal>("MedicineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("MEDICINE_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("MedicineId"));

                    b.Property<decimal>("CategoryMedId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CATEGORY_MED_ID");

                    b.Property<string>("NameMedication")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("NAME_MEDICATION");

                    b.Property<string>("StatusMed")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("STATUS_MED");

                    b.Property<decimal>("UnitMeaId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("UNIT_MEA_ID");

                    b.HasKey("MedicineId")
                        .HasName("PK_MEDICINES");

                    b.HasIndex("CategoryMedId");

                    b.HasIndex("UnitMeaId");

                    b.ToTable("MEDICINES", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.MovementType", b =>
                {
                    b.Property<decimal>("MovementTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("MOVEMENT_TYPE_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("MovementTypeId"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("TYPE_NAME");

                    b.HasKey("MovementTypeId")
                        .HasName("PK_MOVEMENT_TYPE");

                    b.ToTable("MOVEMENT_TYPE", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.Neighbourhood", b =>
                {
                    b.Property<decimal>("NeighId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("NEIGH_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("NeighId"));

                    b.Property<decimal>("CityId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CITY_ID");

                    b.Property<string>("NeighName")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("NEIGH_NAME");

                    b.HasKey("NeighId")
                        .HasName("PK_NEIGHBOURHOOD");

                    b.HasIndex("CityId");

                    b.ToTable("NEIGHBOURHOOD", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.PharmaceuticalForm", b =>
                {
                    b.Property<decimal>("PharmFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("PHARM_FORM_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("PharmFormId"));

                    b.Property<string>("PharmaForm")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("PHARMA_FORM");

                    b.HasKey("PharmFormId")
                        .HasName("PK_PHARMACEUTICAL_FORM");

                    b.ToTable("PHARMACEUTICAL_FORM", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.ProfileUser", b =>
                {
                    b.Property<decimal>("ProfUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("PROF_USER_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("ProfUserId"));

                    b.Property<string>("UserProfile")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("USER_PROFILE");

                    b.HasKey("ProfUserId")
                        .HasName("PK_PROFILE_USER");

                    b.ToTable("PROFILE_USER", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.RoleUser", b =>
                {
                    b.Property<decimal>("RoleUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("ROLE_USER_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("RoleUserId"));

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("USER_ROLE");

                    b.HasKey("RoleUserId")
                        .HasName("PK_ROLE_USER");

                    b.ToTable("ROLE_USER", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.States", b =>
                {
                    b.Property<decimal>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("STATE_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("StateId"));

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("STATE_NAME");

                    b.HasKey("StateId")
                        .HasName("PK_STATES");

                    b.ToTable("STATES", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.Stock", b =>
                {
                    b.Property<decimal>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("STOCK_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("StockId"));

                    b.Property<decimal>("BatchId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("BATCH_ID");

                    b.Property<decimal>("LocationIdStock")
                        .HasColumnType("NUMBER")
                        .HasColumnName("LOCATION_ID_STOCK");

                    b.Property<decimal>("MedicineId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MEDICINE_ID");

                    b.Property<byte>("Quantity")
                        .HasColumnType("NUMBER(4)")
                        .HasColumnName("QUANTITY");

                    b.HasKey("StockId")
                        .HasName("PK_STOCK");

                    b.HasIndex("BatchId")
                        .IsUnique();

                    b.HasIndex("LocationIdStock");

                    b.HasIndex("MedicineId");

                    b.ToTable("STOCK", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.StockMovement", b =>
                {
                    b.Property<decimal>("StockMovementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("STOCK_MOVEMENT_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("StockMovementId"));

                    b.Property<DateTime>("DateMoviment")
                        .HasColumnType("DATE")
                        .HasColumnName("DATE_MOVIMENT");

                    b.Property<decimal>("DispensationId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DISPENSATION_ID");

                    b.Property<decimal>("MovementTypeId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MOVEMENT_TYPE_ID");

                    b.Property<int>("QuantityDispensed")
                        .HasColumnType("NUMBER(6)")
                        .HasColumnName("QUANTITY_DISPENSED");

                    b.Property<decimal>("StockId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("STOCK_ID");

                    b.Property<decimal>("UserId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("USER_ID");

                    b.HasKey("StockMovementId")
                        .HasName("PK_STOCK_MOVEMENT");

                    b.HasIndex("DispensationId");

                    b.HasIndex("MovementTypeId");

                    b.HasIndex("StockId");

                    b.HasIndex("UserId");

                    b.ToTable("STOCK_MOVEMENT", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.UnitMeasure", b =>
                {
                    b.Property<decimal>("UnitMeaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("UNIT_MEA_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("UnitMeaId"));

                    b.Property<string>("UnitMeasureMedicine")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("UNIT_MEASURE_MEDICINE");

                    b.HasKey("UnitMeaId")
                        .HasName("PK_UNIT_MEASURE");

                    b.ToTable("UNIT_MEASURE", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.UsersSys", b =>
                {
                    b.Property<decimal>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("USER_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("UserId"));

                    b.Property<decimal>("ContactUserId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CONTACT_USER_ID");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("LOGIN");

                    b.Property<string>("NameUser")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("NAME_USER");

                    b.Property<string>("PasswordUser")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("PASSWORD_USER");

                    b.Property<decimal>("ProfUserId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PROF_USER_ID");

                    b.Property<decimal>("RoleUserId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ROLE_USER_ID");

                    b.HasKey("UserId")
                        .HasName("PK_USERS_SYS");

                    b.HasIndex("ContactUserId")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique()
                        .HasDatabaseName("UK_USERS_SYS_LOGIN");

                    b.HasIndex("ProfUserId");

                    b.HasIndex("RoleUserId");

                    b.ToTable("USERS_SYS", (string)null);
                });

            modelBuilder.Entity("MedSave.Model.AddressManufacturer", b =>
                {
                    b.HasOne("MedSave.Model.Neighbourhood", "Neighbourhood")
                        .WithOne()
                        .HasForeignKey("MedSave.Model.AddressManufacturer", "NeighId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_NEIGHBOURHOOD_ADDRESS_MANUFACTURER");

                    b.Navigation("Neighbourhood");
                });

            modelBuilder.Entity("MedSave.Model.AddressStock", b =>
                {
                    b.HasOne("MedSave.Model.Neighbourhood", "Neighbourhood")
                        .WithOne()
                        .HasForeignKey("MedSave.Model.AddressStock", "NeighId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_NEIGHBOURHOOD_ADDRESS_STOCK");

                    b.Navigation("Neighbourhood");
                });

            modelBuilder.Entity("MedSave.Model.BatchMedicine", b =>
                {
                    b.HasOne("MedSave.Model.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MANUFACTURER_BATCH_MEDICINE");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("MedSave.Model.City", b =>
                {
                    b.HasOne("MedSave.Model.States", "States")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_STATES_CITY");

                    b.Navigation("States");
                });

            modelBuilder.Entity("MedSave.Model.LocationStock", b =>
                {
                    b.HasOne("MedSave.Model.AddressStock", "AddressStock")
                        .WithOne()
                        .HasForeignKey("MedSave.Model.LocationStock", "AddressIdStock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ADDRESS_STOCK_LOCATION_STOCK");

                    b.Navigation("AddressStock");
                });

            modelBuilder.Entity("MedSave.Model.Manufacturer", b =>
                {
                    b.HasOne("MedSave.Model.AddressManufacturer", "AddressManufacturer")
                        .WithOne()
                        .HasForeignKey("MedSave.Model.Manufacturer", "AddressIdManufacturer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ADDRESS_MANUFACTURER_MANUFACTURER");

                    b.HasOne("MedSave.Model.ContactManufacturer", "ContactManufacturer")
                        .WithOne()
                        .HasForeignKey("MedSave.Model.Manufacturer", "ContactManuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CONTACT_MANUFACTURER_MANUFACTURER");

                    b.Navigation("AddressManufacturer");

                    b.Navigation("ContactManufacturer");
                });

            modelBuilder.Entity("MedSave.Model.MedicineActiveIngr", b =>
                {
                    b.HasOne("MedSave.Model.ActiveIngredient", "ActiveIngredient")
                        .WithMany()
                        .HasForeignKey("ActIngreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ACTIVE_INGREDIENT_MEDICINE_ACTIVE_INGR");

                    b.HasOne("MedSave.Model.Medicines", "Medicines")
                        .WithMany()
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MEDICINES_MEDICINE_ACTIVE_INGR");

                    b.Navigation("ActiveIngredient");

                    b.Navigation("Medicines");
                });

            modelBuilder.Entity("MedSave.Model.MedicineDispense", b =>
                {
                    b.HasOne("MedSave.Model.UsersSys", "UsersSys")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_USERS_SYS_MEDICINE_DISPENSE");

                    b.Navigation("UsersSys");
                });

            modelBuilder.Entity("MedSave.Model.MedicinePharmForm", b =>
                {
                    b.HasOne("MedSave.Model.Medicines", "Medicines")
                        .WithMany()
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MEDICINES_MEDICINE_PHARM_FORM");

                    b.HasOne("MedSave.Model.PharmaceuticalForm", "PharmaceuticalForm")
                        .WithMany()
                        .HasForeignKey("PharmFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PHARMACEUTICAL_FORM_MEDICINE_PHARM_FORM");

                    b.Navigation("Medicines");

                    b.Navigation("PharmaceuticalForm");
                });

            modelBuilder.Entity("MedSave.Model.Medicines", b =>
                {
                    b.HasOne("MedSave.Model.CategoryMedicine", "CategoryMedicine")
                        .WithMany()
                        .HasForeignKey("CategoryMedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CATEGORY_MEDICINE_MEDICINES");

                    b.HasOne("MedSave.Model.UnitMeasure", "UnitMeasure")
                        .WithMany()
                        .HasForeignKey("UnitMeaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UNIT_MEASURE_MEDICINES");

                    b.Navigation("CategoryMedicine");

                    b.Navigation("UnitMeasure");
                });

            modelBuilder.Entity("MedSave.Model.Neighbourhood", b =>
                {
                    b.HasOne("MedSave.Model.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CITY_NEIGHBOURHOOD");

                    b.Navigation("City");
                });

            modelBuilder.Entity("MedSave.Model.Stock", b =>
                {
                    b.HasOne("MedSave.Model.BatchMedicine", "BatchMedicine")
                        .WithOne()
                        .HasForeignKey("MedSave.Model.Stock", "BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BATCH_MEDICINE_STOCK");

                    b.HasOne("MedSave.Model.LocationStock", "LocationStock")
                        .WithMany()
                        .HasForeignKey("LocationIdStock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_LOCATION_STOCK_STOCK");

                    b.HasOne("MedSave.Model.Medicines", "Medicines")
                        .WithMany()
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MEDICINES_STOCK");

                    b.Navigation("BatchMedicine");

                    b.Navigation("LocationStock");

                    b.Navigation("Medicines");
                });

            modelBuilder.Entity("MedSave.Model.StockMovement", b =>
                {
                    b.HasOne("MedSave.Model.MedicineDispense", "MedicineDispense")
                        .WithMany()
                        .HasForeignKey("DispensationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MEDICINE_DISPENSE_STOCK_MOVEMENT");

                    b.HasOne("MedSave.Model.MovementType", "MovementType")
                        .WithMany()
                        .HasForeignKey("MovementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MOVEMENT_TYPE_STOCK_MOVEMENT");

                    b.HasOne("MedSave.Model.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_STOCK_STOCK_MOVEMENT");

                    b.HasOne("MedSave.Model.UsersSys", "UsersSys")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_USERS_SYS_STOCK_MOVEMENT");

                    b.Navigation("MedicineDispense");

                    b.Navigation("MovementType");

                    b.Navigation("Stock");

                    b.Navigation("UsersSys");
                });

            modelBuilder.Entity("MedSave.Model.UsersSys", b =>
                {
                    b.HasOne("MedSave.Model.ContactUser", "ContactUser")
                        .WithOne()
                        .HasForeignKey("MedSave.Model.UsersSys", "ContactUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CONTACT_USER_USERS_SYS");

                    b.HasOne("MedSave.Model.ProfileUser", "ProfileUser")
                        .WithMany()
                        .HasForeignKey("ProfUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PROFILE_USER_USERS_SYS");

                    b.HasOne("MedSave.Model.RoleUser", "RoleUser")
                        .WithMany()
                        .HasForeignKey("RoleUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ROLE_USER_USERS_SYS");

                    b.Navigation("ContactUser");

                    b.Navigation("ProfileUser");

                    b.Navigation("RoleUser");
                });
#pragma warning restore 612, 618
        }
    }
}
